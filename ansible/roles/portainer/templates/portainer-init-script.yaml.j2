# {{ ansible_managed }}
# Portainer initialization script ConfigMap
apiVersion: v1
kind: ConfigMap
metadata:
  name: portainer-init
  namespace: default
data:
  init-portainer.sh: |
    #!/bin/bash
    set -e
    
    echo "üöÄ Initializing Portainer..."
    
    # Wait for Portainer to be ready
    echo "‚è≥ Waiting for Portainer to be accessible..."
    until curl -s http://localhost:9000/api/status >/dev/null 2>&1; do
      echo "   Waiting for Portainer API..."
      sleep 2
    done
    
    echo "‚úÖ Portainer is ready"
    
    # Check if admin user already exists
    STATUS=$(curl -s -o /dev/null -w "%{http_code}" http://localhost:9000/api/users/admin/check || echo "000")
    
    if [ "$STATUS" = "204" ]; then
      echo "‚ÑπÔ∏è  Admin user already configured, skipping initialization"
      exit 0
    fi
    
    echo "üîê Setting up admin user..."
    
    # Initialize admin user
    curl -s -X POST \
      -H "Content-Type: application/json" \
      -d '{"Username":"admin","Password":"{{ portainer_admin_password }}"}' \
      http://localhost:9000/api/users/admin/init
    
    echo "‚úÖ Admin user created"
    
    # Get JWT token for further API calls
    echo "üîë Authenticating..."
    TOKEN=$(curl -s -X POST \
      -H "Content-Type: application/json" \
      -d '{"Username":"admin","Password":"{{ portainer_admin_password }}"}' \
      http://localhost:9000/api/auth | jq -r '.jwt')
    
    if [ "$TOKEN" = "null" ] || [ -z "$TOKEN" ]; then
      echo "‚ùå Failed to get authentication token"
      exit 1
    fi
    
    echo "‚úÖ Authentication successful"
    
    # Configure local Kubernetes environment
    echo "üéØ Configuring Kubernetes environment..."
    curl -s -X POST \
      -H "Content-Type: application/json" \
      -H "Authorization: Bearer $TOKEN" \
      -d '{
        "Name": "local",
        "Type": 2,
        "URL": "https://kubernetes.default.svc",
        "PublicURL": "",
        "GroupID": 1,
        "TLS": true,
        "TLSSkipVerify": true,
        "TLSSkipClientVerify": true
      }' \
      http://localhost:9000/api/endpoints
    
    echo "‚úÖ Kubernetes environment configured"
    
    # Add local registry
    echo "üê≥ Registering local container registry..."
    curl -s -X POST \
      -H "Content-Type: application/json" \
      -H "Authorization: Bearer $TOKEN" \
      -d '{
        "Name": "Local Registry",
        "Type": 1,
        "URL": "{{ ansible_default_ipv4.address }}:{{ registry_port }}",
        "Authentication": false,
        "Username": "",
        "Password": ""
      }' \
      http://localhost:9000/api/registries
    
    echo "‚úÖ Local registry registered"
    
    # Set Portainer settings
    echo "‚öôÔ∏è  Configuring Portainer settings..."
    curl -s -X PUT \
      -H "Content-Type: application/json" \
      -H "Authorization: Bearer $TOKEN" \
      -d '{
        "LogoURL": "",
        "BlackListedLabels": [],
        "AuthenticationMethod": 1,
        "LDAPSettings": {},
        "OAuthSettings": {},
        "AllowBindMountsForRegularUsers": true,
        "AllowPrivilegedModeForRegularUsers": true,
        "AllowVolumeBrowserForRegularUsers": false,
        "AllowHostNamespaceForRegularUsers": false,
        "AllowStackManagementForRegularUsers": true,
        "AllowDeviceMappingForRegularUsers": false,
        "AllowContainerCapabilitiesForRegularUsers": false,
        "EnableHostManagementFeatures": false,
        "DisableBindMountsForNonAdminUsers": false,
        "DisablePrivilegedModeForNonAdminUsers": false,
        "DisableVolumeBrowserForNonAdminUsers": true,
        "DisableHostNamespaceForNonAdminUsers": true,
        "DisableStackManagementForNonAdminUsers": false,
        "DisableDeviceMappingForNonAdminUsers": true,
        "DisableContainerCapabilitiesForNonAdminUsers": true,
        "DisplayDonationHeader": false,
        "DisplayExternalContributors": false,
        "EnableEdgeComputeFeatures": false,
        "UserSessionTimeout": "8h",
        "KubeconfigExpiry": "0",
        "EnableTelemetry": false
      }' \
      http://localhost:9000/api/settings
    
    echo "‚úÖ Portainer settings configured"
    
    echo "üéâ Portainer initialization complete!"
    echo "   Admin user: admin"
    echo "   Password: {{ portainer_admin_password }}"
    echo "   Registry: {{ ansible_default_ipv4.address }}:{{ registry_port }}"
