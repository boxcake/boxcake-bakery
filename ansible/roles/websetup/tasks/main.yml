---
- name: Install system dependencies
  package:
    name:
      - python3
      - python3-pip
      - python3-venv
      - git
      - curl
      - rsync
    state: present
  become: yes

# Homelab user is now created by bootstrap-homelab.sh script

- name: Ensure /opt/homelab directory exists
  file:
    path: "{{ homelab_home }}"
    state: directory
    owner: "{{ homelab_user }}"
    group: "{{ homelab_user }}"
    mode: '0755'
  become: yes

- name: Create logs directory
  file:
    path: "{{ homelab_home }}/logs"
    state: directory
    owner: "{{ homelab_user }}"
    group: "{{ homelab_user }}"
    mode: '0755'
  become: yes

- name: Copy project files to /opt/homelab
  synchronize:
    src: "{{ ansible_env.PWD }}/../"
    dest: "{{ homelab_home }}/"
    delete: no
    recursive: yes
    owner: no
    group: no
    rsync_opts:
      - "--exclude=.git"
      - "--exclude=__pycache__"
      - "--exclude=*.pyc"
      - "--exclude=node_modules"
      - "--exclude=build"
      - "--exclude=dist"
  become: yes

- name: Set ownership of /opt/homelab
  file:
    path: "{{ homelab_home }}"
    owner: "{{ homelab_user }}"
    group: "{{ homelab_user }}"
    recurse: yes
  become: yes

- name: Install Node.js (required for web interface)
  shell: |
    curl -fsSL https://deb.nodesource.com/setup_18.x | sudo -E bash -
    sudo apt-get install -y nodejs
  become: yes

- name: Check if Python virtual environment exists
  stat:
    path: "{{ homelab_home }}/venv/bin/activate"
  register: venv_exists

- name: Create centralized Python virtual environment
  shell: python3 -m venv {{ homelab_home }}/venv
  become_user: "{{ homelab_user }}"
  become: yes
  when: not venv_exists.stat.exists

- name: Install Python dependencies for web service
  pip:
    requirements: "{{ homelab_home }}/web-config/backend/requirements.txt"
    virtualenv: "{{ homelab_home }}/venv"
  become_user: "{{ homelab_user }}"
  become: yes

- name: Build React frontend
  shell: |
    cd {{ homelab_home }}/web-config/frontend
    npm install
    npm run build
  become_user: "{{ homelab_user }}"
  become: yes

- name: Create systemd service for web configuration interface
  template:
    src: homelab-web-config.service.j2
    dest: /etc/systemd/system/homelab-web-config.service
    mode: '0644'
  become: yes
  notify: restart homelab-web-config

- name: Enable and start web configuration service
  systemd:
    name: homelab-web-config
    state: started
    enabled: yes
    daemon_reload: yes
  become: yes

- name: Wait for web service to be ready
  uri:
    url: "http://localhost:8080/api/health"
    method: GET
  register: health_check
  retries: 30
  delay: 2
  until: health_check.status == 200

- name: Get host IP address
  shell: hostname -I | awk '{print $1}'
  register: host_ip

- name: Display setup completion message
  debug:
    msg: |
      ðŸš€ Initial setup complete!

      Web configuration interface is ready at:
      http://{{ host_ip.stdout }}:8080

      Next steps:
      1. Visit the web interface
      2. Configure your homelab settings
      3. Click 'Deploy Now' to complete the installation