---
# Main Ansible playbook for Home Lab Pi setup
- name: "Home Lab Pi Complete Setup"
  hosts: homelab
  become: yes
  gather_facts: yes
  
  vars_files:
    - vars/main.yml
    - vars/network.yml
  
  pre_tasks:
    - name: Update package cache
      apt:
        update_cache: yes
        cache_valid_time: 3600
      tags: always

  roles:
    - role: system-prep
      tags: [system, prep]
      
    - role: homelab-user
      tags: [user, security]
      
    - role: docker
      tags: [docker, container]
      
    - role: k3s
      tags: [k3s, kubernetes]
      
    - role: storage
      tags: [storage, longhorn]
      
    - role: load-balancer
      tags: [metallb, networking]

    - role: kubelish
      tags: [kubelish, mdns]

    - role: opentofu
      tags: [opentofu, terraform, infrastructure]

  post_tasks:
    - name: Wait for Portainer service to exist
      kubernetes.core.k8s_info:
        api_version: v1
        kind: Service
        name: portainer-service
        namespace: default
        wait: true
        wait_timeout: 300
        kubeconfig: "{{ kubeconfig_path }}"
      register: portainer_service_wait
      failed_when: false
      tags: [portainer-config, configure]

    - name: Wait for Portainer deployment to be available
      kubernetes.core.k8s_info:
        api_version: apps/v1
        kind: Deployment
        name: portainer
        namespace: default
        wait: true
        wait_condition:
          type: Available
          status: "True"
        wait_timeout: 300
        kubeconfig: "{{ kubeconfig_path }}"
      tags: [portainer-config, configure]

    # Portainer configuration is now handled by Terraform deployment
    # Configuration happens automatically via the deployed container
    - name: Display completion message
      debug:
        msg: |
          ðŸŽ‰ Home Lab Pi setup completed successfully!
          
          âœ… COMPLETE DEPLOYMENT - Core infrastructure running:
          - K3s Kubernetes cluster
          - Longhorn distributed storage
          - MetalLB load balancer with IP pools
          - Kubelish mDNS announcer (all nodes)
          - OpenTofu (Infrastructure as Code)

          ðŸš§ Next Steps - Deploy with OpenTofu:
          - Docker Registry (container with persistent storage)
          - Portainer (container management)
          - Registry UI (web interface)
          - All services with proper state management
          
          ðŸš€ OpenTofu deployment completed automatically!
          âœ… All services deployed and configured
          âœ… Portainer configured with admin access
          3. Manage everything: sudo -u {{ homelab_user }} -i
          
          ðŸ“Š LoadBalancer Status:
          Run: kubectl get svc -A | grep LoadBalancer
          
          ðŸŽŠ Migration Complete: Pure Ansible deployment!
      tags: always
